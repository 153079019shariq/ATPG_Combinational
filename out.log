(3, 3)
{'A': 1, 'C': 1, 'B': 1, 'fanout1': 2, 'fanout2': 2, 'fanout3': 5, '1': 3, '3': 4, '2': 3, '5': 6, '4': 3, '6': 7, 'Y': 5, 'Z': 7}
A 1 1 1 0
C fanout2 1 1 0
B fanout1 1 1 0
fanout1 1 0 0 0
fanout1 2 0 0 0
fanout1 4 0 0 0
fanout1 6 0 0 0
fanout2 2 0 0 0
fanout2 4 0 0 0
fanout3 Y 0 0 0
fanout3 5 1 1 0
1 3 0 0 0
3 fanout3 0 0 0
2 3 0 0 0
5 6 0 0 0
4 5 0 0 0
6 Z 0 0 0
A 1 1 1 0
C fanout2 1 1 0
B fanout1 1 1 0
fanout1 1 1 1 0
fanout1 2 1 1 0
fanout1 4 1 1 0
fanout1 6 1 1 0
fanout2 2 1 1 0
fanout2 4 1 1 0
fanout3 Y 6 3 0
fanout3 5 6 3 0
1 3 2 3 0
3 fanout3 6 3 0
2 3 3 2 0
5 6 4 7 0
4 5 3 3 0
6 Z 6 6 0
PO_list [('fanout3', 'Y'), ('6', 'Z')]
faulty_edge_list ['fanout3', '5', 'sa1']
5 Y
['5', '6', 'Z']
edges [('5', '6'), ('6', 'Z')]
i ('5', '6')
i ('6', 'Z')
5 Z
X_path True
**********************Objective ********************
D_fronteir_list []
**********************Backtrace ********************
node1,node2 fanout3 5
Before Backtrace ('3', 'fanout3') x x
None
After Backtrace ('3', 'fanout3') 0 0
None
node1,node2 3 fanout3
node1,node2 3 fanout3
Before Backtrace ('1', '3') x x
('2', '3') x x
None
G.nodes[node1]['gatetype'] 3
val_assign 0
G.nodes[node1]['gatetype'] or
edge_to_assign ('2', '3')
After Backtrace ('1', '3') x x
('2', '3') 0 0
None
node1,node2 2 3
node1,node2 2 3
Before Backtrace ('fanout1', '2') x x
('fanout2', '2') x x
None
G.nodes[node1]['gatetype'] 2
val_assign 0
G.nodes[node1]['gatetype'] nand
edge_to_assign ('fanout1', '2')
After Backtrace ('fanout1', '2') 1 1
('fanout2', '2') x x
None
node1,node2 fanout1 2
node1,node2 fanout1 2
Before Backtrace ('B', 'fanout1') x x
None
After Backtrace ('B', 'fanout1') 1 1
None
node1,node2 B fanout1
I_Stack.peek() ('B', 'fanout1') 1
None
**********************Forward Implication 1st********************
Fault at primary output_non_faulty
Fault at primary output_non_faulty
Fault at primary output_non_faulty
Fault at primary output_non_faulty
**************************************************************
faulty_edge_list ['fanout3', '5', 'sa1']
A 1 x x
C fanout2 x x
B fanout1 1 1
fanout1 1 1 1
fanout1 2 1 1
fanout1 4 1 1
fanout1 6 1 1
fanout2 2 x x
fanout2 4 x x
fanout3 Y x x
fanout3 5 x 1
1 3 x x
3 fanout3 x x
2 3 x x
5 6 x x
4 5 x x
6 Z x x
One turn over try another
PO_list [('fanout3', 'Y'), ('6', 'Z')]
faulty_edge_list ['fanout3', '5', 'sa1']
5 Y
['5', '6', 'Z']
edges [('5', '6'), ('6', 'Z')]
i ('5', '6')
i ('6', 'Z')
5 Z
X_path True
**********************Objective ********************
D_fronteir_list ['5']
**********************Backtrace ********************
node1,node2 fanout3 5
Before Backtrace ('3', 'fanout3') x x
None
After Backtrace ('3', 'fanout3') 0 0
None
node1,node2 3 fanout3
node1,node2 3 fanout3
Before Backtrace ('1', '3') x x
('2', '3') x x
None
G.nodes[node1]['gatetype'] 3
val_assign 0
G.nodes[node1]['gatetype'] or
edge_to_assign ('2', '3')
After Backtrace ('1', '3') x x
('2', '3') 0 0
None
node1,node2 2 3
node1,node2 2 3
Before Backtrace ('fanout1', '2') 1 1
('fanout2', '2') x x
None
G.nodes[node1]['gatetype'] 2
val_assign 0
G.nodes[node1]['gatetype'] nand
edge_to_assign ('fanout2', '2')
After Backtrace ('fanout1', '2') 1 1
('fanout2', '2') 1 1
None
node1,node2 fanout2 2
node1,node2 fanout2 2
Before Backtrace ('C', 'fanout2') x x
None
After Backtrace ('C', 'fanout2') 1 1
None
node1,node2 C fanout2
I_Stack.peek() ('B', 'fanout1') 1
('C', 'fanout2') 1
None
**********************Forward Implication 1st********************
Fault at primary output_non_faulty
Fault at primary output_non_faulty
**************************************************************
faulty_edge_list ['fanout3', '5', 'sa1']
A 1 x x
C fanout2 1 1
B fanout1 1 1
fanout1 1 1 1
fanout1 2 1 1
fanout1 4 1 1
fanout1 6 1 1
fanout2 2 1 1
fanout2 4 1 1
fanout3 Y x x
fanout3 5 x 1
1 3 x x
3 fanout3 x x
2 3 0 0
5 6 0 0
4 5 0 0
6 Z 1 1
One turn over try another
PO_list [('fanout3', 'Y'), ('6', 'Z')]
faulty_edge_list ['fanout3', '5', 'sa1']
5 Y
['5', '6', 'Z']
edges [('5', '6'), ('6', 'Z')]
i ('5', '6')
5 Z
X_path False
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$SECOND TURN BEGIN$$$$$$$$$
faulty_edge_list ['fanout3', '5', 'sa1']
A 1 x x
C fanout2 0 0
B fanout1 1 1
fanout1 1 1 1
fanout1 2 1 1
fanout1 4 1 1
fanout1 6 1 1
fanout2 2 1 1
fanout2 4 1 1
fanout3 Y x x
fanout3 5 x 1
1 3 x x
3 fanout3 x x
2 3 0 0
5 6 0 0
4 5 0 0
6 Z 1 1
**********************Forward Implication 2nd********************
Fault at primary output_non_faulty
Fault at primary output_non_faulty
PO_list [('fanout3', 'Y'), ('6', 'Z')]
faulty_edge_list ['fanout3', '5', 'sa1']
5 Y
['5', '6', 'Z']
edges [('5', '6'), ('6', 'Z')]
i ('5', '6')
5 Z
X_path False
faulty_edge_list ['fanout3', '5', 'sa1']
A 1 x x
C fanout2 0 0
B fanout1 1 1
fanout1 1 1 1
fanout1 2 1 1
fanout1 4 1 1
fanout1 6 1 1
fanout2 2 0 0
fanout2 4 0 0
fanout3 Y 1 1
fanout3 5 1 1
1 3 x x
3 fanout3 1 1
2 3 1 1
5 6 1 1
4 5 1 1
6 Z 0 0
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$SECOND TURN BEGIN$$$$$$$$$
faulty_edge_list ['fanout3', '5', 'sa1']
A 1 x x
C fanout2 0 0
B fanout1 0 0
fanout1 1 1 1
fanout1 2 1 1
fanout1 4 1 1
fanout1 6 1 1
fanout2 2 0 0
fanout2 4 0 0
fanout3 Y 1 1
fanout3 5 1 1
1 3 x x
3 fanout3 1 1
2 3 1 1
5 6 1 1
4 5 1 1
6 Z 0 0
**********************Forward Implication 2nd********************
Fault at primary output_non_faulty
Fault at primary output_non_faulty
Fault at primary output_non_faulty
Fault at primary output_non_faulty
PO_list [('fanout3', 'Y'), ('6', 'Z')]
faulty_edge_list ['fanout3', '5', 'sa1']
5 Y
['5', '6', 'Z']
edges [('5', '6'), ('6', 'Z')]
i ('5', '6')
5 Z
X_path False
NO TEST VECTOR POSSIBLE
